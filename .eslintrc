{
  "parser": "babel-eslint",
  "settings": {
    "import/parser": "babel-eslint",
  },
  "rules": {
    "array-bracket-spacing": [2, "never"],
    "array-callback-return": 2,
    "arrow-parens": [2, "always"],
    "arrow-spacing": 2,
    "block-scoped-var": 2,
    "block-spacing": [2, "always"],
    "brace-style": [2, "1tbs"],
    "camelcase": 2,
    "capitalized-comments": [2, "always", {"ignoreConsecutiveComments": true}],
    "comma-dangle": [2, "always-multiline"],
    "comma-spacing": [2, {"before": false, "after": true}],
    "comma-style": [2, "last"],
    "complexity": 2,
    "computed-property-spacing": [2, "never"],
    "consistent-this": [2, "that"],
    "constructor-super": 2,
    "curly": [2, "multi-line"],
    "default-case": 2,
    "dot-location": [2, "property"],
    "dot-notation": 2,
    "eol-last": 2,
    "eqeqeq": 2,
    "func-call-spacing": [2, "never"],
    "func-style": [2, "expression"],
    "generator-star-spacing": [2, {"before": true, "after": false}],
    "guard-for-in": 2,
    "handle-callback-err": [2, "^(e|err|error)$"],
    "indent": [2, 2, {"SwitchCase": 1, "VariableDeclarator": 1, "MemberExpression": 1, "FunctionDeclaration": {"parameters": 1}, "FunctionExpression": {"parameters": 1}, "CallExpression": {"arguments": 1}, "ArrayExpression": 1, "ObjectExpression": 1}],
    "init-declarations": 0, // Sometimes usefull for a conditional assignment with multiple ifs
    "jsx-quotes": [2, "prefer-double"],
    "key-spacing": [2, {"beforeColon": false, "afterColon": true}],
    "keyword-spacing": [2, {"before": true, "after": true, "overrides": {}}],
    "linebreak-style": [2, "unix"],
    "lines-around-comment": [2, {"beforeBlockComment": true}],
    "max-depth": 2,
    "max-len": [2, 115, 2],
    "max-statements-per-line": 2,
    "new-cap": [2, {"capIsNew": false, "newIsCap": true}],
    "new-parens": 0, // No extra parens nessesary
    "no-alert": 2,
    "no-array-constructor": 2,
    "no-bitwise": 2,
    "no-caller": 2,
    "no-case-declarations": 2,
    "no-catch-shadow": 2,
    "no-class-assign": 2,
    "no-compare-neg-zero": 2,
    "no-cond-assign": 2,
    "no-confusing-arrow": 0, // Who would confuse '>=' with '=>'?
    "no-console": [2, {allow: ["warn", "error"]}],
    "no-const-assign": 2,
    "no-constant-condition": 2,
    "no-debugger": 2,
    "no-delete-var": 2,
    "no-div-regex": 2,
    "no-dupe-args": 2,
    "no-dupe-class-members": 2,
    "no-dupe-keys": 2,
    "no-duplicate-case": 2,
    "no-duplicate-imports": 2,
    "no-empty": 2,
    "no-empty-character-class": 2,
    "no-empty-function": 2,
    "no-empty-pattern": 2,
    "no-eval": 2,
    "no-ex-assign": 2,
    "no-extend-native": 2,
    "no-extra-bind": 2,
    "no-extra-boolean-cast": 2,
    "no-extra-label": 2,
    "no-extra-parens": 0, // Extra parens around ?: and multiline expressions can make them better readable
    "no-extra-semi": 2,
    "no-fallthrough": 2,
    "no-floating-decimal": 2,
    "no-func-assign": 2,
    "no-global-assign": 2,
    "no-implicit-coercion": 2,
    "no-implicit-globals": 2,
    "no-implied-eval": 2,
    "no-inner-declarations": 2,
    "no-invalid-regexp": 2,
    "no-irregular-whitespace": 2,
    "no-iterator": 2,
    "no-label-var": 2,
    "no-labels": 2,
    "no-lone-blocks": 2,
    "no-lonely-if": 2,
    "no-loop-func": 2,
    "no-mixed-requires": 2,
    "no-mixed-spaces-and-tabs": 2,
    "no-multi-assign": 2,
    "no-multi-spaces": 2,
    "no-multi-str": 2,
    "no-multiple-empty-lines": 2,
    "no-new": 2,
    "no-new-func": 2,
    "no-new-object": 2,
    "no-new-require": 2,
    "no-new-symbol": 2,
    "no-new-wrappers": 2,
    "no-obj-calls": 2,
    "no-octal": 2,
    "no-octal-escape": 2,
    "no-param-reassign": 2,
    "no-path-concat": 2,
    "no-plusplus": 2,
    "no-process-env": 2,
    "no-process-exit": 2,
    "no-proto": 2,
    "no-prototype-builtins": 2,
    "no-redeclare": 2,
    "no-regex-spaces": 2,
    "no-restricted-globals": 2,
    "no-return-assign": 2,
    "no-script-url": 2,
    "no-self-assign": 2,
    "no-self-compare": 2,
    "no-sequences": 2,
    "no-shadow": 0, // Sometimes it is usefull to explicitely shadow an outer variable
    "no-sparse-arrays": 2,
    "no-tabs": 2,
    "no-template-curly-in-string": 2,
    "no-this-before-super": 2,
    "no-throw-literal": 2,
    "no-trailing-spaces": 2,
    "no-undef": 0, // Does not work with jsx-control-statements, replaced by "jsx-control-statements/jsx-jcs-no-undef"
    "no-undef-init": 2,
    "no-undefined": 0, // Sometimes we want to assign "undefined" to a variable
    "no-underscore-dangle": 2,
    "no-unexpected-multiline": 2,
    "no-unmodified-loop-condition": 2,
    "no-unneeded-ternary": 2,
    "no-unreachable": 2,
    "no-unsafe-finally": 2,
    "no-unsafe-negation": 2,
    "no-unused-expressions": 2,
    "no-unused-labels": 2,
    "no-unused-vars": [2, {"vars": "all", "args": "none"}], // Better have available args explicit
    "no-use-before-define": 2,
    "no-useless-call": 2,
    "no-useless-computed-key": 2,
    "no-useless-concat": 2,
    "no-useless-constructor": 2,
    "no-useless-escape": 2,
    "no-useless-rename": 2,
    "no-useless-return": 2,
    "no-var": 2,
    "no-void": 2,
    "no-warning-comments": 2,
    "no-whitespace-before-property": 2,
    "no-with": 2,
    "nonblock-statement-body-position": [2, "beside"],
    "object-curly-spacing": [2, "never"],
    "object-shorthand": [2, "properties", {"avoidQuotes": true}],
    "one-var": [2, "never"],
    "operator-assignment": 2,
    "operator-linebreak": [2, "after", {"overrides": {"?": "before", ":": "before"}}],
    "prefer-arrow-callback": 2,
    "prefer-const": 2,
    "prefer-destructuring": 2,
    "prefer-numeric-literals": 2,
    "prefer-promise-reject-errors": 2,
    "prefer-rest-params": 2,
    "prefer-spread": 2,
    "prefer-template": 2,
    "quote-props": [2, "consistent-as-needed"],
    "quotes": [2, "single", "avoid-escape"],
    "radix": 2,
    "rest-spread-spacing": [2, "never"],
    "semi": [2, "never"],
    "semi-spacing": [2, {"before": false, "after": true}],
    "space-before-blocks": [2, "always"],
    "space-before-function-paren": [2, "never"],
    "space-in-parens": [2, "never"],
    "space-infix-ops": 2,
    "space-unary-ops": [2, {"words": true, "nonwords": false}],
    "spaced-comment": [2, "always"],
    "strict": [2, "never"],
    "symbol-description": 2,
    "template-curly-spacing": [2, "never"],
    "template-tag-spacing": [2, "never"],
    "unicode-bom": [2, "never"],
    "use-isnan": 2,
    "valid-jsdoc": 2,
    "valid-typeof": 2,
    "vars-on-top": 2,
    "wrap-iife": [2, "inside"],
    "wrap-regex": 2,
    "yoda": 2,

    // eslint-plugin-import
    "import/default": 2,
    "import/export": 2,
    "import/extensions": [2, "always", {"js": "never"}],
    "import/first": 2,
    "import/named": 2,
    "import/namespace": 2,
    "import/newline-after-import": [2, {"count": 2}],
    "import/no-absolute-path": 2,
    "import/no-duplicates": 2,
    "import/no-dynamic-require": 2,
    "import/no-extraneous-dependencies": 2,
    "import/no-mutable-exports": 2,
    "import/no-named-as-default": 2,
    "import/no-unresolved": [2, {"commonjs": true, "amd": true}],
    "import/no-webpack-loader-syntax": 2,
    "import/order": [2, {"newlines-between": "never"}],
    "import/unambiguous": 2,

    // eslint-plugin-react
    "react/jsx-boolean-value": 2,
    "react/jsx-closing-bracket-location": 2,
    "react/jsx-curly-spacing": [2, "never"],
    "react/jsx-equals-spacing": [2, "never"],
    "react/jsx-first-prop-new-line": [2, "multiline-multiprop"],
    "react/jsx-indent": [2, 2],
    "react/jsx-indent-props": [2, 4],
    "react/jsx-key": 2,
    "react/jsx-no-bind": [2, {"allowArrowFunctions": true}],
    "react/jsx-no-comment-textnodes": 2,
    "react/jsx-no-duplicate-props": 2,
    "react/jsx-no-target-blank": 2,
    "react/jsx-no-undef": 2,
    "react/jsx-pascal-case": 2,
    "react/jsx-space-before-closing": [2, "always"],
    "react/jsx-uses-react": 2,
    "react/jsx-uses-vars": 2,
    "react/jsx-wrap-multilines": 2,
    "react/no-array-index-key": 2,
    "react/no-children-prop": 2,
    "react/no-danger": 2,
    "react/no-danger-with-children": 2,
    "react/no-deprecated": 2,
    "react/no-did-mount-set-state": 2,
    "react/no-did-update-set-state": 2,
    "react/no-direct-mutation-state": 2,
    "react/no-find-dom-node": 2,
    "react/no-is-mounted": 2,
    "react/no-multi-comp": [2, {"ignoreStateless": true}],
    "react/no-render-return-value": 2,
    "react/no-string-refs": 2,
    "react/no-unknown-property": 2,
    "react/no-unused-prop-types": 2,
    "react/prefer-es6-class": 2,
    "react/prefer-stateless-function": 0, // Maybe in the future
    "react/prop-types": 2,
    "react/react-in-jsx-scope": 2,
    "react/require-render-return": 2,
    "react/self-closing-comp": 2,
    "react/sort-comp": 2,
    "react/style-prop-object": 2,
    "react/void-dom-elements-no-children": 2,

    // jsx-control-statements
    "jsx-control-statements/jsx-choose-not-empty": 2,
    "jsx-control-statements/jsx-for-require-each": 2,
    "jsx-control-statements/jsx-for-require-of": 2,
    "jsx-control-statements/jsx-if-require-condition": 2,
    "jsx-control-statements/jsx-otherwise-once-last": 2,
    "jsx-control-statements/jsx-use-if-tag": 2,
    "jsx-control-statements/jsx-when-require-condition": 2, // Replaces "no-undef"
    "jsx-control-statements/jsx-jcs-no-undef": 2,
  },
  "plugins": [
    "react",
    "import",
    "babel",
    "jsx-control-statements",
  ],
  "env": {
    "node": true
  },
  "globals": {
    "Promise": true,
    "Map": true,
    "Set": true,
  },
  "ecmaFeatures": {
    "jsx": true
  }
}
